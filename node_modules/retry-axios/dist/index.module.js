import e from"axios";function t(t){return(t=t||e).interceptors.response.use(n,s)}function r(t,r){(r=r||e).interceptors.response.eject(t)}function n(e){return e}function o(e){var t=[];if(e)return Array.isArray(e)?e:("object"==typeof e&&Object.keys(e).forEach(function(r){"number"==typeof r&&(t[r]=e[r])}),t)}function s(t){if(e.isCancel(t))return Promise.reject(t);var r=i(t)||{};if(r.currentRetryAttempt=r.currentRetryAttempt||0,r.retry="number"==typeof r.retry?r.retry:3,r.retryDelay="number"==typeof r.retryDelay?r.retryDelay:100,r.instance=r.instance||e,r.backoffType=r.backoffType||"exponential",r.httpMethodsToRetry=o(r.httpMethodsToRetry)||["GET","HEAD","PUT","OPTIONS","DELETE"],r.noResponseRetries="number"==typeof r.noResponseRetries?r.noResponseRetries:2,r.checkRetryAfter="boolean"!=typeof r.checkRetryAfter||r.checkRetryAfter,r.maxRetryAfter="number"==typeof r.maxRetryAfter?r.maxRetryAfter:3e5,r.statusCodesToRetry=o(r.statusCodesToRetry)||[[100,199],[429,429],[500,599]],t.config=t.config||{},t.config.raxConfig=Object.assign({},r),!(r.shouldRetry||f)(t))return Promise.reject(t);var n=new Promise(function(e,n){var o=0;if(r.checkRetryAfter&&t.response&&t.response.headers["retry-after"]){var s=function(e){var t=Number(e);if(!Number.isNaN(t))return 1e3*t;var r=Date.parse(e);return Number.isNaN(r)?void 0:r-Date.now()}(t.response.headers["retry-after"]);if(!(s&&s>0&&s<=r.maxRetryAfter))return n(t);o=s}else o="linear"===r.backoffType?1e3*r.currentRetryAttempt:"static"===r.backoffType?r.retryDelay:(Math.pow(2,r.currentRetryAttempt)-1)/2*1e3;t.config.raxConfig.currentRetryAttempt+=1,setTimeout(e,o)}),s=r.onRetryAttempt?Promise.resolve(r.onRetryAttempt(t)):Promise.resolve();return Promise.resolve().then(function(){return n}).then(function(){return s}).then(function(){return r.instance.request(t.config)})}function f(e){var t=e.config.raxConfig;if(!t||0===t.retry)return!1;if(!e.response&&(t.currentRetryAttempt||0)>=t.noResponseRetries)return!1;if(!e.config.method||t.httpMethodsToRetry.indexOf(e.config.method.toUpperCase())<0)return!1;if(e.response&&e.response.status){for(var r=!1,n=0,o=t.statusCodesToRetry;n<o.length;n+=1){var s=o[n],f=e.response.status;if(f>=s[0]&&f<=s[1]){r=!0;break}}if(!r)return!1}return t.currentRetryAttempt=t.currentRetryAttempt||0,!(t.currentRetryAttempt>=t.retry)}function i(e){if(e&&e.config)return e.config.raxConfig}export{t as attach,r as detach,f as shouldRetryRequest,i as getConfig};
//# sourceMappingURL=index.module.js.map
